- name: Compose random pwd access doc
  set_fact:
    svc_access_line: "Login to any of these services as user 'admin', using password '{{ rancher_password }}'"
  when: using_random_pwd is defined and using_random_pwd

- name: Compose supplied pwd access doc
  set_fact:
    svc_access_line: "Login to any of these services as user 'admin', using the password you supplied."
  when: using_random_pwd is not defined

- name: Login to KeyCloak
  uri:
    url: "https://{{ rancher_server }}/auth/realms/master/protocol/openid-connect/token"
    method: POST
    body_format: form-urlencoded
    body:
      client_id: admin-cli
      grant_type: password
      username: admin
      password: "{{ rancher_password }}"
    validate_certs: no
    return_content: yes
  register: kc_login_response
  until: kc_login_response['status']|default(0) == 200
  retries: 30
  delay: 10

- name: Set KeyCloak Token
  set_fact:
    kc_token: "{{ kc_login_response.json.access_token }}"

- name: Create KeyCloak SAML Client
  uri:
    url: "https://{{ rancher_server }}/auth/admin/realms/master/clients"
    method: POST
    body_format: json
    body:
      clientId: "https://{{ rancher_server }}:{{ rancher_port }}/v1-saml/keycloak/saml/metadata"
      name: "rancher"
      protocol: "saml"
      frontchannelLogout: false
      redirectUris: ["https://{{ rancher_server }}:{{ rancher_port }}/v1-saml/keycloak/saml/acs"]
      attributes: { "saml.authnstatement": false, "saml.client.signature": false, "saml.force.post.binding": false, "saml.server.signature": true}
    validate_certs: no
    status_code: 201
    headers:
      Authorization: Bearer {{ kc_token }}
    return_content: yes
  register: kc_rancher_client_resp
  retries: 5
  delay: 10

- name: Create cn mapping
  uri:
    url: "{{ kc_rancher_client_resp.location }}/protocol-mappers/models"
    method: POST
    body_format: json
    body:
      config:
        user.attribute: "username"
        friendly.name: ""
        attribute.name: "cn"
        attribute.nameformat: "Basic"
      name: "username to cn"
      protocol: "saml"
      protocolMapper: "saml-user-property-mapper"
    validate_certs: no
    status_code: 201
    headers:
      Authorization: Bearer {{ kc_token }}
  retries: 5
  delay: 10

- name: Create uid mapping
  uri:
    url: "{{ kc_rancher_client_resp.location }}/protocol-mappers/models"
    method: POST
    body_format: json
    body:
      config:
        user.attribute: "username"
        friendly.name: ""
        attribute.name: "uid"
        attribute.nameformat: "Basic"
      name: "username to uid"
      protocol: "saml"
      protocolMapper: "saml-user-property-mapper"
    validate_certs: no
    status_code: 201
    headers:
      Authorization: Bearer {{ kc_token }}
  retries: 5
  delay: 10

- name: Create displayName mapping
  uri:
    url: "{{ kc_rancher_client_resp.location }}/protocol-mappers/models"
    method: POST
    body_format: json
    body:
      config:
        user.attribute: "firstName"
        friendly.name: ""
        attribute.name: "displayName"
        attribute.nameformat: "Basic"
      name: "firstName to displayName"
      protocol: "saml"
      protocolMapper: "saml-user-property-mapper"
    validate_certs: no
    status_code: 201
    headers:
      Authorization: Bearer {{ kc_token }}
  retries: 5
  delay: 10

- name: Create Groups mapping
  uri:
    url: "{{ kc_rancher_client_resp.location }}/protocol-mappers/models"
    method: POST
    body_format: json
    body:
      config:
        attribute.name: "memberOf"
        attribute.nameformat: "Basic"
        friendly.name: ""
        full.path: false
        single: true
      name: "Groups"
      protocol: "saml"
      protocolMapper: "saml-group-membership-mapper"
    validate_certs: no
    status_code: 201
    headers:
      Authorization: Bearer {{ kc_token }}
  retries: 5
  delay: 10

#https://rancher.com/docs/rancher/v2.x/en/admin-settings/authentication/keycloak/#keycloak-6-0-0-idpssodescriptor-missing-from-options
- name: Get SAML Metadata IDPSSODescriptor
  uri:
    url: "https://{{ rancher_server }}/auth/realms/master/protocol/saml/descriptor"
    method: GET
    validate_certs: no
    headers:
      Authorization: Bearer {{ kc_token }}
    return_content: yes
  register: idp_metadata
  retries: 5
  delay: 10

- name: Login to Rancher
  uri:
    url: "https://{{ rancher_server }}:{{ rancher_port }}/v3-public/localProviders/local?action=login"
    method: POST
    body_format: json
    body:
      username: admin
      password: "{{ rancher_password }}"
    validate_certs: no
    status_code: 201
    return_content: yes
  register: rancher_login
  retries: 5
  delay: 10

- name: Set Rancher Token
  set_fact:
    ra_token: "{{ rancher_login.json.token }}"

- name: Setup Rancher External Auth
  uri:
    url: "https://{{ rancher_server }}:{{ rancher_port }}/v3/keyCloakConfigs/keycloak"
    method: PUT
    validate_certs: no
    body_format: json
    body:
      accessMode: "required"
      actions: { "disable": "https://{{ rancher_server }}:{{ rancher_port }}/v3/keyCloakConfigs/keycloak?action=disable", "testAndEnable": "https://{{ rancher_server }}:{{ rancher_port }}/v3/keyCloakConfigs/keycloak?action=testAndEnable" }
      allowedPrincipalIds: ["keycloak_user://admin"]
      baseType: "authConfig"
      displayNameField: "displayName"
      enabled: true
      groupsField: "memberOf"
      id: "keycloak"
      idpMetadataContent: '{{ idp_metadata.content | regex_replace("<EntitiesDescriptor ([^>]*)>\s+<EntityDescriptor", "<EntityDescriptor \1") | regex_replace("\n</EntitiesDescriptor>", "") }}'
      links: { "self": "https://{{ rancher_server }}:{{ rancher_port }}/v3/keyCloakConfigs/keycloak", "update": "https://{{ rancher_server }}:{{ rancher_port }}/v3/keyCloakConfigs/keycloak" }
      name: "keycloak"
      rancherApiHost: "https://{{ rancher_server }}:{{ rancher_port }}/"
      spCert: "{{ rancher_cert }}"
      spKey: "{{ rancher_key }}"
      type: "keyCloakConfig"
      uidField: "uid"
      userNameField: "cn"
    headers:
      Authorization: Bearer {{ ra_token }}
  retries: 5
  delay: 10

- name: Set default Rancher user role to admin
  uri:
    url: "https://{{ rancher_server }}:{{ rancher_port }}/v3/globalRoles/admin"
    method: PUT
    validate_certs: no
    body_format: json
    body:
      newUserDefault: true
    headers:
      Authorization: Bearer {{ ra_token }}
  retries: 5
  delay: 10
